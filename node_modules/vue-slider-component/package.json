{
  "_args": [
    [
      {
        "raw": "https://github.com/NightCatSama/vue-slider-component",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "https://github.com/NightCatSama/vue-slider-component",
        "spec": "git+https://github.com/NightCatSama/vue-slider-component.git",
        "type": "hosted",
        "hosted": {
          "type": "github",
          "ssh": "git@github.com:NightCatSama/vue-slider-component.git",
          "sshUrl": "git+ssh://git@github.com/NightCatSama/vue-slider-component.git",
          "httpsUrl": "git+https://github.com/NightCatSama/vue-slider-component.git",
          "gitUrl": "git://github.com/NightCatSama/vue-slider-component.git",
          "shortcut": "github:NightCatSama/vue-slider-component",
          "directUrl": "https://raw.githubusercontent.com/NightCatSama/vue-slider-component/master/package.json"
        }
      },
      "/Users/Cameron/Developer/Hackathons/HackTX/emotions-map"
    ]
  ],
  "_from": "git+https://github.com/NightCatSama/vue-slider-component.git",
  "_id": "vue-slider-component@1.0.9",
  "_inCache": true,
  "_installable": true,
  "_location": "/vue-slider-component",
  "_phantomChildren": {},
  "_requested": {
    "raw": "https://github.com/NightCatSama/vue-slider-component",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "https://github.com/NightCatSama/vue-slider-component",
    "spec": "git+https://github.com/NightCatSama/vue-slider-component.git",
    "type": "hosted",
    "hosted": {
      "type": "github",
      "ssh": "git@github.com:NightCatSama/vue-slider-component.git",
      "sshUrl": "git+ssh://git@github.com/NightCatSama/vue-slider-component.git",
      "httpsUrl": "git+https://github.com/NightCatSama/vue-slider-component.git",
      "gitUrl": "git://github.com/NightCatSama/vue-slider-component.git",
      "shortcut": "github:NightCatSama/vue-slider-component",
      "directUrl": "https://raw.githubusercontent.com/NightCatSama/vue-slider-component/master/package.json"
    }
  },
  "_requiredBy": [
    "#USER",
    "/"
  ],
  "_resolved": "git+https://github.com/NightCatSama/vue-slider-component.git#351d364e82172f04e85f739a30d32103dc5c15f5",
  "_shasum": "fd2b74286751aa99517f6f7c991b60846045d545",
  "_shrinkwrap": null,
  "_spec": "https://github.com/NightCatSama/vue-slider-component",
  "_where": "/Users/Cameron/Developer/Hackathons/HackTX/emotions-map",
  "author": {
    "name": "NightCatSama",
    "email": "642163903@qq.com"
  },
  "bugs": {
    "url": "https://github.com/NightCatSama/vue-slider-component/issues"
  },
  "dependencies": {},
  "description": "Can use the Slider component in vue1.x and vue2.x",
  "devDependencies": {},
  "gitHead": "351d364e82172f04e85f739a30d32103dc5c15f5",
  "homepage": "https://github.com/NightCatSama/vue-slider-component#readme",
  "license": "ISC",
  "main": "index.js",
  "name": "vue-slider-component",
  "optionalDependencies": {},
  "readme": "# vue-slider-component\nCan use the slider in vue1.x and  vue2.x\n\n[demo](https://nightcatsama.github.io/vue-slider-component/example/)\n\n## Install\n```\nnpm install vue-slider-component\n```\n\n## Todo\n\n- [x] Basis\n- [x] Display maximum value & minimum value\n- [x] piecewise style\n- [x] Compatible with PC and mobile terminal\n- [x] Tooltip\n- [x] The custom data\n- [x] Range\n- [x] The vertical component\n\n## Example\n\n```\ncd vue-slider-component/example\n```\n```\nnpm install\n```\n```\nnpm run dev\n```\n```\nnpm run build\n```\n\n\n## usage\nUse in vue1.x\n\ne.g:\n```html\n<template>\n    <div>\n        <vue-slider v-ref:slider :val.sync=\"val\" @callback=\"getValue\"></vue-slider>\n    </div>\n</template>\n<script>\nimport vueSlider from 'vue-slider-component/vue-slider.vue';\n\nnew Vue({\n  el: '#app',\n  components: {\n    vueSlider\n  },\n  data: {\n    val: 1\n  }\n  methods: {\n    getValue(val) {\n      console.log(val)\n    },\n    setValue(num) {\n      this.val = num\n    }\n  }\n});\n</script>\n```\n<br>\nUse in vue2.x \n<br>Because```.sync``` was deprecated. Props are now always one-way down. So in order to realize the two-way, Can be set in the @callback\n\ne.g:\n```html\n<template>\n    <div>\n        <vue-slider ref=\"slider\" :val=\"val\" @callback=\"getValue\"></vue-slider>\n    </div>\n</template>\n<script>\nimport vueSlider from 'vue-slider-component'\n\nnew Vue({\n  el: '#app',\n  components: {\n    vueSlider\n  },\n  data: {\n    val: 1\n  }\n  methods: {\n    getValue(value) {\n      /* Two-way */\n      this.val = value\n    },\n    setValue(num) {\n      this.val = num\n    }\n  }\n});\n</script>\n```\n\n## Options\n\n### Props\n| Props       | Type          | Default  | Description  |\n| ----------- |:--------------| ---------|--------------|\n| class-name  | String        | null     | the custom class |\n| styles      | Object        | null     | the custom styles |\n| direction   | String        | horizontal | set the direction of the component, optional value: ['horizontal', 'vertical'] |\n| eventType   | String        | 'auto'   | the event type, optional value: ['auto', 'touch', 'mouse', 'none'] |\n| width       | Number[,String(in horizontal)]  | 150      | width of the component |\n| height      | Number[,String(in vertical)]        | 4        | height of the component |\n| dotSize     | Number        | 15       | size of the sliders |\n| min         | Number        | 0        | the minimum value   |\n| max         | Number        | 100      | the maximum value   |\n| interval    | Number        | 1        | the gap between the values |\n| show        | Boolean       | true     | display of the component |\n| speed       | Number        | 0.5      | transition time |\n| disabled    | Boolean       | false    | whether to disable components |\n| piecewise   | Boolean       | false    | display of the piecewise |\n| tooltip     | String,Boolean| false    | control the tooltip, optional value: ['hover', 'always', false] |\n| tooltipDir  | String        | top or left | set the direction of the tooltip, optional value: ['top', 'bottom', 'left', 'right'] |\n| val         | Number,Array  | 0        | initial value (if the value for the array open range model) |\n| data        | Array         | null     | the custom data |\n\n\n### Function\n| Name        | Type                         | Description  |\n| ----------- |:-----------------------------| -------------|\n| setValue    | Params: value[Number, Array] | set value of the component |\n| setIndex    | Params: index*[Number]       | set index of the component  |\n| getValue    | Return: value[Number, Array] | get value of the component |\n| getIndex    | Return: index*[Number]       | get index of the component |\n| refresh     | null                         | Refresh the component      |\n\n* [ index ] is the index to the array in the custom data model *\n* [ index ] is equal to (( value - min ) / interval ) in normal mode *\n\n### Events\n| Name          | Type          | Description  |\n| --------------|:--------------|--------------|\n| callback      | Params: value[Number]  | values change when the callback function |\n| drag-start    | Params: context[Object]| Drag the start event |\n| drag-end      | Params: context[Object]| Drag the end event |\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/NightCatSama/vue-slider-component.git"
  },
  "scripts": {},
  "version": "1.0.9"
}
